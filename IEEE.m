Pow = -30;                            % average transmitted power (dBm)
fc = 50e9;                            % sampling frequency
numbits = 10;                         % number of bits generated by the source
Ts = 8e-9;                            % frame time, i.e., average pulse
Ns = 16;                              % number of frame time/symbol
Tm = 2e-9;                            % pulse duration [s]
tau = 0.9091e-9;                      % shaping factor for the pulse[s]
G = 1;
% G=0 -> no graphical output
% G=1 -> graphical output
% ----------------------------------------
% Step One - Simulating transmission chain
% ----------------------------------------
% Conv Encoder R=1/2
inputs = bits(numbits); 
[pbits, bits] = conv_encoder(inputs);
% BPSK for busrt
repbits = repcode(not(bits),Ns);
% Scrambler and BPM modulation (1 and -1 is popularities, 0 is guard time)
BPM0 = [[1 -1 -1 1 -1 -1 1 -1] zeros(1, 8)];
BPM1 = [zeros(1, 8) [1 -1 -1 1 -1 -1 1 -1]];
DScode=[];
for i = 1:length(bits)
    if pbits(i) > 0.5
        DScode=[DScode BPM1];
    else DScode=[DScode BPM0];
    end
end
% Pulse Amplitude Modulation 
[PAMDSseq,DSseq] = PAM_DS(repbits,fc,Ts,DScode);
% Shaping filter
power = (10^(Pow/10))/1000;               % average transmitted power
 % (watt)
Ex = power * Ts;                          % energy per pulse
w0 = waveform(fc,Tm,tau);                 % energy normalized pulse
 % waveform
wtx = w0 .* sqrt(Ex);                     % pulse waveform
Sa = conv(PAMDSseq,wtx);                  % output of the filter
Sb = conv(DSseq,wtx);                     % output of the filter (no modulation)
 % modulation
L = (floor(Ts*fc))*Ns*numbits;
Stx = Sa(1:L);
ref = Sb(1:L);
% ---------------------------
% Step Two - Graphical output
% ---------------------------
if G

F = figure(1);
set(F,'Position',[32 223 951 420]);
tmax = numbits*Ns*Ts;
time = linspace(0,tmax,length(Stx));
P = plot(time,Stx);
set(P,'LineWidth',[2]);
ylow=-1.25*max(wtx);
yhigh=1.25*max(wtx);
axis([0 tmax ylow yhigh]);
AX=gca;
set(AX,'FontSize',12);
X=xlabel('Time [s]');
set(X,'FontSize',14);
Y=ylabel('Amplitude [V]');
set(Y,'FontSize',14);
for j = 1 : numbits
 tj = (j-1)*Ns*Ts;
 L1=line([tj tj],[ylow yhigh]);
 set(L1,'Color',[0 0 0],'LineStyle','--', ...
 'LineWidth',[2]);
 for k = 0 : Ns-1
 if k > 0
 tn = tj + k*Ts;
 L2=line([tn tn],[0.8*ylow 0.8*yhigh]);
 set(L2,'Color',[0.5 0.5 0.5], ...
 'LineStyle','-.','LineWidth',[1]);
 end
 end
end
end 